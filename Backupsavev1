bl_info = {
    "name": "Auto Backup",
    "blender": (2, 80, 0),
    "category": "Scene",
}

import bpy
import os
from datetime import datetime
from bpy.types import Operator, Panel

class OBJECT_OT_toggle_backup(Operator):
    bl_idname = "object.toggle_backup"
    bl_label = "Toggle Auto Backup"

    def execute(self, context):
        addon_prefs = bpy.context.preferences.addons[__name__].preferences
        addon_prefs.enabled = not addon_prefs.enabled
        return {'FINISHED'}

class OBJECT_PT_auto_backup(Panel):
    bl_label = "Auto Backup"
    bl_idname = "PT_auto_backup"
    bl_space_type = 'PROPERTIES'
    bl_region_type = 'WINDOW'
    bl_context = "scene"
    bl_category = 'Auto Backup'

    def draw(self, context):
        layout = self.layout
        addon_prefs = context.preferences.addons[__name__].preferences

        layout.prop(addon_prefs, "enabled", text="Enable Auto Backup")
        layout.prop(addon_prefs, "backup_interval", text="Backup Interval (minutes)")

def save_backup(dummy):
    if addon_prefs.enabled:
        current_file = bpy.data.filepath

        if current_file:
            directory = os.path.dirname(current_file)
            base_name = os.path.splitext(os.path.basename(current_file))[0]
            timestamp = datetime.now().strftime("%Y%m%d%H%M%S")
            backup_name = f"{base_name}_{timestamp}.blend"
            backup_path = os.path.join(directory, backup_name)

            bpy.ops.wm.save_as_mainfile(filepath=backup_path)

addon_prefs = None

def register():
    bpy.utils.register_class(OBJECT_OT_toggle_backup)
    bpy.utils.register_class(OBJECT_PT_auto_backup)
    bpy.utils.register_class(AutoBackupPreferences)
    bpy.app.handlers.save_post.append(save_backup)

def unregister():
    bpy.utils.unregister_class(OBJECT_OT_toggle_backup)
    bpy.utils.unregister_class(OBJECT_PT_auto_backup)
    bpy.utils.unregister_class(AutoBackupPreferences)
    bpy.app.handlers.save_post.remove(save_backup)

class AutoBackupPreferences(bpy.types.AddonPreferences):
    bl_idname = __name__

    enabled: bpy.props.BoolProperty(
        name="Enable Auto Backup",
        default=True,
    )

    backup_interval: bpy.props.IntProperty(
        name="Backup Interval (minutes)",
        default=1,
        min=1,
        description="Set the interval for auto backups",
    )

if __name__ == "__main__":
    register()
